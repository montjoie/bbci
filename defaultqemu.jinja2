{%- set boot_method = boot_method|default("qemu") %}
{%- set boot_media= boot_media|default("tmpfs") %}

metadata:
  image.type: 'montjoie-ci'
  image.url: {{ BOOT_FQDN }}/{{ PATH }}/{{ KERNELFILE }}
  kernel.tree: mainline
  kernel.version: {{ KVERSION }}
  kernel.endian: {{ ARCHENDIAN }}
  kernel.defconfig: {{ K_DEFCONFIG }}
  kernel.defconfig_base: {{ K_DEFCONFIG }}
  kernel.arch_defconfig: {{ K_DEFCONFIG }}
  build.overlays: {{ BUILD_OVERLAYS }}
  build.toolchain: {{ BUILD_TOOLCHAIN }}
  platform.fastboot: false
  platform.name: {{ qemu_machine }}
  platform.mach: {{ MACH }}
  test.plan: boot
  git.commit: {{ GIT_LASTCOMMIT }}
  git.describe: {{ GIT_DESCRIBE }}
  git.branch: {{ GIT_BRANCH }}
  git.url: http://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git
  device.type: {{ DEVICETYPE }}
  job.arch: {{ ARCH }}
  job.name: {{ JOBNAME }}
  job.kernel_url: {{ BOOT_FQDN }}/{{ PATH }}/{{ KERNELFILE }}
  job.kernel_image: {{ KERNELFILE }}
  job.modules_url: {{ BOOT_FQDN }}/{{ PATH }}/modules.tar.gz
{%- if initrd_path is defined %}
  job.initrd_url: {{ RAMD_FQDN }}/{{ initrd_path }}
{%- endif %}
  job.dtb_url: {{ BOOT_FQDN }}/{{ PATH }}/dts/{{ DTB }}
{%- if rootfs_method == "nfs" %}
  job.nfsrootfs_url: {{ ROOT_FQDN }}{{ rootfs_path }}
{% endif %}

device_type: {{ DEVICETYPE }}

job_name: {{ JOBNAME }}
timeouts:
  job:
    minutes: 240
  action:
   minutes: 10
  actions:
    power-off:
      seconds: 30
priority: high
visibility: public

{%- if rootfs_method == "nbd" %}
protocols:
  lava-xnbd:
    port: auto
{%- endif %}

{%- if DEVICETYPE == "qemu" %}
context:
    arch: {{ qemu_arch }}
{%- if qemu_no_kvm is defined %}
    no_kvm: {{ qemu_no_kvm }}
{%- endif %}
{%- if qemu_cpu is defined %}
    cpu: {{ qemu_cpu }}
{%- endif %}
{%- if qemu_machine is defined %}
    machine: {{ qemu_machine }}
{%- endif %}
{%- if qemu_memory is defined %}
    memory: {{ qemu_memory }}
{%- endif %}
{%- if console_device is defined %}
    console_device: {{ console_device }}
{%- endif %}
{%- if qemu_netdevice is defined %}
    netdevice: {{ qemu_netdevice }}
{%- endif %}
{%- if qemu_model is defined %}
    model: {{ qemu_model }}
{%- endif %}
{%- if guestfs_interface is defined %}
    guestfs_interface: {{ guestfs_interface }}
{%- endif %}
{%- if guestfs_driveid is defined %}
    guestfs_driveid: {{ guestfs_driveid }}
{%- endif %}
{%- if qemu_extra_options is defined %}
    extra_options: {{ qemu_extra_options }}
{%- endif %}
{%- endif %}

actions:
- deploy:
{%- if rootfs_method == "nbd" %}
    protocols:
      lava-xnbd:
      - action: nbd-deploy
        request: set_port
{%- endif %}
    timeout:
      minutes: 3
    to: {{ boot_media }}
    os: oe
    images:
      kernel:
        image_arg: '-kernel {kernel}'
        url: {{ BOOT_FQDN }}/{{ PATH }}/{{ KERNELFILE }}
{%- if rootfs_method == "ramdisk" %}
      ramdisk:
{%- if DEVICETYPE == "qemu" %}
{%- if image_arg is defined %}
        image_arg: '{{ image_arg }}'
{% else %}
        image_arg: '-initrd {ramdisk}'
{%- endif %}
{%- endif %}
        url: {{ ROOT_FQDN }}{{ rootfs_path }}
{% endif %}
{%- if dtb_path is defined %}
      dtb:
{%- if DEVICETYPE == "qemu" %}
        image_arg: '-dtb {dtb}'
{%- endif %}
        url: {{ BOOT_FQDN }}{{ dtb_path }}
{%- endif %}

{%- if rootfs_method == "nfs" %}
      ramdisk:
{%- if image_arg is defined %}
        image_arg: '{{ image_arg }}'
{% else %}
        image_arg: '-initrd {ramdisk}'
{%- endif %}
        url: {{ RAMD_FQDN }}{{ initrd_path }}
      nfsrootfs:
        url: {{ ROOT_FQDN }}/{{ rootfs_path }}
        compression: {{ ROOTFS_COMP }}
{% endif %}

{%- if rootfs_method == "nbd" %}
      ramdisk:
{%- if image_arg is defined %}
        image_arg: '{{ image_arg }}'
{% else %}
        image_arg: '-initrd {ramdisk}'
{%- endif %}
        url: {{ RAMD_FQDN }}{{ initrd_path }}
      nbdrootfs:
        url: {{ ROOT_FQDN }}/{{ rootfs_path }}
        compression: {{ ROOTFS_COMP }}
{% endif %}

{%- if test_raid == 'True' %}
      sda:
        url: http://boot.montjoie.local/drives/q-sda.img.gz
        image_arg: '-drive format=raw,file={sda}'
        compression: gz
      sdb:
        url: http://boot.montjoie.local/drives/q-sdb.img.gz
        image_arg: '-drive format=raw,if=virtio,file={sdb}'
        compression: gz
      sdc:
        url: http://boot.montjoie.local/drives/q-sdc.img.gz
        image_arg: '-drive format=raw,if=virtio,file={sdc}'
        compression: gz
      sdd:
        url: http://boot.montjoie.local/drives/q-sdd.img.gz
        image_arg: '-drive format=raw,if=virtio,file={sdd}'
        compression: gz
      sde:
        url: http://boot.montjoie.local/drives/q-sde.img.gz
        image_arg: '-drive format=raw,if=virtio,file={sde}'
        compression: gz
{% endif %}


- boot:
    timeout:
      minutes: 5
    method: {{ boot_method }}
    media: {{ boot_media }}
{%- if boot_commands is defined %}
    commands: {{ boot_commands }}
{%- endif %}
    prompts:
      - '/ #'
      - '~ #'
{%- if auto_login_password %}
    auto_login:
      login_prompt: "login:"
      username: root
      password_prompt: 'Password:'
      password: {{ auto_login_password }}
{% endif %}

{%- if test_gentoo == 'True' %}
- test:
    timeout:
        minutes: 30
    definitions:
        - repository: https://github.com/montjoie/lava-tests.git
          from: git
          path: execs/gentoo.yaml
          name: Gentoo
{% endif %}

{%- if test == 'True' %}
- test:
    timeout:
        minutes: 240
    definitions:
        - repository:
            metadata:
              format: Lava-Test Test Definition 1.0
              name: download_modules
              description: "Download modules"
            run:
              steps:
              - if [ -e /proc/pnp ];then grep nameserver /proc/pnp >> /etc/resolv.conf;fi
              - /bin/sh -c 'grep -q ^name /etc/resolv.conf || sleep 15'
              - wget {{ BOOT_FQDN }}/{{ PATH }}/modules.tar.gz
              - tar xvzf modules.tar.gz -C /
          from: inline
          name: downloadmodule
          path: inline/dm.yaml
{%- if test_boot == 'True' %}
        - repository: https://github.com/montjoie/lava-tests.git
          from: git
          path: execs/boot.yaml
          name: Boot
{%- endif %}
{%- if test_network == 'True' %}
        - repository: https://github.com/montjoie/lava-tests.git
          from: git
          path: execs/network.yaml
          name: Network
{%- endif %}
{%- if test_hw == 'True' %}
        - repository: https://github.com/montjoie/lava-tests.git
          from: git
          path: execs/hardware.yaml
          name: Hardware
{%- endif %}
{%- if test_crypto == 'True' %}
        - repository: https://github.com/montjoie/lava-tests.git
          from: git
          path: execs/crypto.yaml
          name: Crypto
{%- endif %}
{%- if test_misc == 'True' %}
        - repository: https://github.com/montjoie/lava-tests.git
          from: git
          path: execs/misc.yaml
          name: Misc
{%- endif %}
{%- if test_luks == 'True' %}
        - repository: https://github.com/montjoie/lava-tests.git
          from: git
          path: execs/luks.yaml
          name: luks
{% endif %}
{%- if test_infra == 'True' %}
        - repository: https://github.com/montjoie/lava-tests.git
          from: git
          path: execs/infra.yaml
          name: infra
{% endif %}

{%- endif %}

{%- if test_raid == 'True' %}
- test:
    timeout:
        minutes: 30
    definitions:
        - repository: https://github.com/montjoie/lava-tests.git
          from: git
          path: execs/mdadm.yaml
          name: mdadm
{% endif %}

{%- if test_dma_api == 'True' %}
- test:
    timeout:
        minutes: 240
    definitions:
        - repository:
            metadata:
              format: Lava-Test Test Definition 1.0
              name: test_dma_api
              description: "test DMA API debugfs"
            run:
              steps:
              - mount -t debugfs none /sys/kernel/debug
              - ls -l /sys/kernel/debug
          from: inline
          name: testdmaapi
          path: inline/dm.yaml
{% endif %}

{%- if test_hc == 'True' %}
- test:
    timeout:
      minutes: 1
    definitions:
    - repository:
        metadata:
          format: Lava-Test Test Definition 1.0
          name: baseline
          description: "Minimal HC test"
          os:
            - debian
          scope:
            - functional
          environment:
            - lava-test-shell
        run:
          steps:
            - sleep 30
            - lsusb
            - modprobe dwmac-sunxi
            - modprobe dwmac-sun8i
            - modprobe asix
            - ip a
            - >
                for level in warn err; do
                  dmesg --level=$level --notime -x -k > dmesg.$level
                done
            - >
                for level in crit alert emerg; do
                  dmesg --level=$level --notime -x -k > dmesg.$level
                  test -s dmesg.$level && res=fail || res=pass
                  count=$(cat dmesg.$level | wc -l)
                  lava-test-case $level \
                    --result $res \
                    --measurement $count \
                    --units lines
                done
            - cat dmesg.emerg dmesg.alert dmesg.crit dmesg.err dmesg.warn
      lava-signal: kmsg
      from: inline
      name: healthcheck
      path: inline/hc.yaml
{% endif %}
